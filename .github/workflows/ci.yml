# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  [push, pull_request]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
         java-version: '17'
         distribution: 'temurin'
   #   - name: Build with Gradle
    #    uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1

      - name: Build JIB
        run: ./gradlew jibDockerBuild

      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIATJTKMK7WNZEABJH6
          aws-secret-access-key: 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
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: inbox-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag inbox:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG   
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
